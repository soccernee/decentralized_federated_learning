syntax = "proto3";

/*
* NodeExchange: the message exchange service definition for the nodes to connect to the network
*/
service NodeExchange {
  // actions from the node to the leader
  rpc RegisterNode (NodeRequest) returns (NodeResponse) {}
  rpc DeregisterNode (NodeRequest) returns (NodeResponse) {}
  rpc ShareModelWeights (ModelRequest) returns (ModelResponse) {}

  // actions from the leader to the other nodes
  rpc Heartbeat (HeartbeatRequest) returns (HeartbeatResponse) {}
  rpc DistributeModelWeights (ModelRequest) returns (ModelResponse) {}

  // actions from the node to the other nodes
  rpc DeclareLeadership (NodeRequest) returns (NodeResponse) {}
}

message ModelWeightColumn {
  int32 column = 1;
  repeated float values = 2;
}

message NodeRequest {
  string id = 1;
  string ip_addr = 2;
  int32 port = 3;
}

message NodeResponse {
  int32 response_code = 1;
  string leader_id = 2;
  string leader_ip_addr = 3;
  int32 leader_port = 4;
}

message ModelRequest {
  int32 model_version = 1;
  int32 num_data_points = 2;
  repeated ModelWeightColumn modelWeightMatrix = 3;
}

message ModelResponse {
  bool received = 1;
}

message HeartbeatRequest {
  int32 active_nodes_version = 1;
  repeated NodeRequest nodes = 2;
}

message HeartbeatResponse {
  bool received = 1;
}